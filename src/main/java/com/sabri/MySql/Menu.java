/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.sabri.MySql;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author todbolsa
 */
public class Menu extends javax.swing.JFrame {

    /**
     * Creates new form Menu
     */
    private Connection co;
    private String urlBD = "jdbc:mysql://localhost:3306/Ejemplo1";
    public Menu() {
        initComponents();
        this.setTitle("Algo");
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        Conexion = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jMenu1.setText("BD");

        jMenuItem1.setText("Conectar");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Desconectar");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem9.setText("jMenuItem9");
        jMenu1.add(jMenuItem9);

        Conexion.add(jMenu1);

        jMenu2.setText("Opciones");

        jMenuItem3.setText("Insertar");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem3);

        jMenuItem5.setText("Modificar");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem5);

        jMenuItem4.setText("Eliminar");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem4);

        jMenuItem6.setText("Mostrar todas");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem6);

        jMenuItem7.setText("Buscar");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem7);

        jMenuItem8.setText("jMenuItem8");
        jMenu2.add(jMenuItem8);

        Conexion.add(jMenu2);

        setJMenuBar(Conexion);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 284, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        desconectarBD();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        conectarBD();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        itemInsertActionPerformed(evt);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        itemRemoveActionPerformed(evt);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        itemTodasActionPerformed(evt);
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void itemInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemInsertActionPerformed
        System.out.println("Insertando...");
        String nombre = JOptionPane.showInputDialog("Nombre: ");
        if (nombre == null || nombre.isEmpty())
            return;
        String apellidos = JOptionPane.showInputDialog("Apellidos: ");
        if (apellidos == null || apellidos.isEmpty())
            return;
        String edadSt = JOptionPane.showInputDialog("Edad: ");
        if (edadSt == null || edadSt.isEmpty())
            return;
        try {
            int edad = Integer.parseInt(edadSt);

            // Insercion
            String sqlInsert = "INSERT INTO personas (nombre, apellidos, edad) VALUES('" + nombre + "', '" + apellidos + "', " + edad + ")";
            conectarBD();
            Statement st = co.createStatement();
            int filas = st.executeUpdate(sqlInsert);
            if (filas > 0)
                JOptionPane.showMessageDialog(null, "Persona insertada", "Ejemplo1-JDBC", JOptionPane.INFORMATION_MESSAGE);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Edad no valida", "Ejemplo1-JDBC", JOptionPane.ERROR_MESSAGE);
            return;
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error de BD", "Ejemplo1-JDBC", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        } finally {
            desconectarBD();
        }
    }//GEN-LAST:event_itemInsertActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void conectarBD() {
        System.out.println("Conexion");
        try {
            co = DriverManager.getConnection(urlBD, "root", "");
        } catch (SQLException ex) {
            JOptionPane.showInternalMessageDialog(null, "Error de conexion", "Ejemplo1-JDBC", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
    }

    private void desconectarBD() {
        System.out.println("Desconexion");
        try {
            if (co != null)
                co.close();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }

    private void itemRemoveActionPerformed(java.awt.event.ActionEvent evt) {
        //Falta contenido
        System.out.println("Eliminando...");
        String valor = JOptionPane.showInputDialog("Introduce la id: ");
        try {
            PreparedStatement st = (PreparedStatement) co.createStatement();
            int id = Integer.parseInt(valor);
            st.executeUpdate();
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Edad no valida", "Ejemplo1-JDBC", JOptionPane.ERROR_MESSAGE);

        } catch (SQLException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);

        }
    }

    private void itemTodasActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            conectarBD();
            String SQLSelect = "SELECT * FROM personas";
            PreparedStatement ps = co.prepareStatement(SQLSelect);
            ResultSet rs = ps.executeQuery();
            String persona = "";
            while (rs.next()) {
                persona = rs.getInt(1) + " - " + rs.getString(3) + ", " + rs.getString(2) + " " + rs.getInt(4) + " years";
                this.jTextArea1.append(persona + "\n");
            }
            rs.close();
        } catch (SQLException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void itemBuscarActionPerformed(java.awt.event.ActionEvent evt) {
        //Falta contenido
        try {
            conectarBD();
            String SQLBuscar = "SELECT * FROM personas WHERE idPersona=?";
            PreparedStatement ps = co.prepareStatement(SQLBuscar);
            ResultSet rs = ps.executeQuery();
            if (rs.next()) {
                String persona = rs.getInt(1) + " - " + rs.getString(3) + ", " + rs.getString(2) + " " + rs.getInt(4) + " years";
                this.jTextArea1.append(persona + "\n");
            } else {
                //Falta contenido
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error de BD", "Ejemplo-JDBC", JOptionPane.ERROR_MESSAGE);
            return;
        }
    }

    /**
     * @param args the command line arguments
     * aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar Conexion;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
