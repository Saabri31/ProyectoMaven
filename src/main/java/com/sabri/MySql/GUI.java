/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.gf.ejemplos;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author maggonis
 */
public class GUI extends javax.swing.JFrame {
    
    private String urlBD = "jdbc:mysql://localhost:3306/ejemplo1";
    private Connection con;

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        menuBD = new javax.swing.JMenu();
        itemConectar = new javax.swing.JMenuItem();
        itemDesconectar = new javax.swing.JMenuItem();
        menuPersonas = new javax.swing.JMenu();
        itemInsert = new javax.swing.JMenuItem();
        itemUpdate = new javax.swing.JMenuItem();
        insertDelete = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        menuBD.setText("BD");

        itemConectar.setText("Conectar...");
        itemConectar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemConectarActionPerformed(evt);
            }
        });
        menuBD.add(itemConectar);

        itemDesconectar.setText("Desconectar...");
        itemDesconectar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemDesconectarActionPerformed(evt);
            }
        });
        menuBD.add(itemDesconectar);

        jMenuBar1.add(menuBD);

        menuPersonas.setText("Persona");

        itemInsert.setText("Nueva");
        itemInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemInsertActionPerformed(evt);
            }
        });
        menuPersonas.add(itemInsert);

        itemUpdate.setText("Modificar");
        menuPersonas.add(itemUpdate);

        insertDelete.setText("Eliminar");
        insertDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertDeleteActionPerformed(evt);
            }
        });
        menuPersonas.add(insertDelete);

        jMenuBar1.add(menuPersonas);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 277, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void conectarBD() {
        try {            
            con = DriverManager.getConnection(urlBD, "root", "");
            System.out.println("Conexion realizada");
            
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error de conexion", "Ejemplo1-JDBC", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
        
    }
    
    private void desconectarBD() {
        if (con == null) return;
        try {
            con.close();
            System.out.println("Desconexion realizada");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error de desconexion", "Ejemplo1-JDBC", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
    }
    
    private void itemConectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemConectarActionPerformed
        conectarBD();        
    }//GEN-LAST:event_itemConectarActionPerformed

    private void itemDesconectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemDesconectarActionPerformed
        desconectarBD();
    }//GEN-LAST:event_itemDesconectarActionPerformed

    private void insertDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertDeleteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_insertDeleteActionPerformed

    private void itemInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemInsertActionPerformed
        String nombre = JOptionPane.showInputDialog("Nombre: ");
        if (nombre == null || nombre.isEmpty()) return;
        String apellidos = JOptionPane.showInputDialog("Apellidos: ");
        if (apellidos == null || apellidos.isEmpty()) return;
        String edadSt = JOptionPane.showInputDialog("Edad: ");
        if (edadSt == null || edadSt.isEmpty()) return;
        try {
            int edad = Integer.parseInt(edadSt);
            
            // Insercion
            String sqlInsert = "INSERT INTO personas (nombre, apellidos, edad) VALUES('" + nombre + "', '" + apellidos + "', " + edad + ")";
            conectarBD();
            Statement st = con.createStatement();
            int filas = st.executeUpdate(sqlInsert);
            if (filas > 0)
                JOptionPane.showMessageDialog(null, "Persona insertada", "Ejemplo1-JDBC", JOptionPane.INFORMATION_MESSAGE);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Edad no valida", "Ejemplo1-JDBC", JOptionPane.ERROR_MESSAGE);
            return;
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error de BD", "Ejemplo1-JDBC", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        } finally {
            desconectarBD();
        }
    }//GEN-LAST:event_itemInsertActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {                
                GUI gui = new GUI();
                gui.setLocationRelativeTo(null);
                gui.setVisible(true);                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem insertDelete;
    private javax.swing.JMenuItem itemConectar;
    private javax.swing.JMenuItem itemDesconectar;
    private javax.swing.JMenuItem itemInsert;
    private javax.swing.JMenuItem itemUpdate;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu menuBD;
    private javax.swing.JMenu menuPersonas;
    // End of variables declaration//GEN-END:variables
}
