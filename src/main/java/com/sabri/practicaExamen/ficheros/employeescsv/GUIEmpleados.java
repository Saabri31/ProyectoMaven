/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.sabri.practicaExamen.ficheros.employeescsv;

import com.opencsv.CSVReader;
import com.opencsv.CSVReaderBuilder;
import com.opencsv.CSVWriter;
import com.opencsv.CSVWriterBuilder;
import com.opencsv.ICSVWriter;
import com.opencsv.bean.CsvToBean;
import com.opencsv.bean.CsvToBeanBuilder;
import com.opencsv.bean.StatefulBeanToCsv;
import com.opencsv.bean.StatefulBeanToCsvBuilder;
import com.opencsv.exceptions.CsvDataTypeMismatchException;
import com.opencsv.exceptions.CsvRequiredFieldEmptyException;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.filechooser.FileSystemView;

/**
 *
 * @author macarena
 */
public class GUIEmpleados extends javax.swing.JFrame {

    private List<Empleado> empleados;
    private DefaultListModel<Empleado> modeloLista;

    /**
     * Creates new form EmpleadoHR
     */
    public GUIEmpleados() {
        initComponents();
        empleados = new ArrayList<>();
        modeloLista = new DefaultListModel<>();
        listaEmpleados.setModel(modeloLista);
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ordenacion = new javax.swing.ButtonGroup();
        opcionesOrdenacion = new javax.swing.JPanel();
        ordenarPorId = new javax.swing.JRadioButton();
        ordenarPorApellido = new javax.swing.JRadioButton();
        ordenarPorDepartamento = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaEmpleados = new javax.swing.JList<>();
        cargarDatos = new javax.swing.JButton();
        busquedaPorID = new javax.swing.JButton();
        anadirMasDatos = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Empleados - HR");

        opcionesOrdenacion.setBorder(javax.swing.BorderFactory.createTitledBorder("Ordenar por"));

        ordenacion.add(ordenarPorId);
        ordenarPorId.setSelected(true);
        ordenarPorId.setText("ID");
        ordenarPorId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ordenarPorIdActionPerformed(evt);
            }
        });

        ordenacion.add(ordenarPorApellido);
        ordenarPorApellido.setText("Apellido");
        ordenarPorApellido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ordenarPorApellidoActionPerformed(evt);
            }
        });

        ordenacion.add(ordenarPorDepartamento);
        ordenarPorDepartamento.setText("Departamento");
        ordenarPorDepartamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ordenarPorDepartamentoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout opcionesOrdenacionLayout = new javax.swing.GroupLayout(opcionesOrdenacion);
        opcionesOrdenacion.setLayout(opcionesOrdenacionLayout);
        opcionesOrdenacionLayout.setHorizontalGroup(
            opcionesOrdenacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(opcionesOrdenacionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ordenarPorId)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ordenarPorApellido)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ordenarPorDepartamento)
                .addContainerGap())
        );
        opcionesOrdenacionLayout.setVerticalGroup(
            opcionesOrdenacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, opcionesOrdenacionLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(opcionesOrdenacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ordenarPorId)
                    .addComponent(ordenarPorApellido)
                    .addComponent(ordenarPorDepartamento))
                .addGap(16, 16, 16))
        );

        jScrollPane1.setViewportView(listaEmpleados);

        cargarDatos.setText("Cargar datos");
        cargarDatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargarDatosActionPerformed(evt);
            }
        });

        busquedaPorID.setText("Busqueda");
        busquedaPorID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                busquedaPorIDActionPerformed(evt);
            }
        });

        anadirMasDatos.setText("AÃ±adir + datos");
        anadirMasDatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anadirMasDatosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(opcionesOrdenacion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(anadirMasDatos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(busquedaPorID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cargarDatos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(opcionesOrdenacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cargarDatos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(busquedaPorID)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(anadirMasDatos)))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ordenarPorIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ordenarPorIdActionPerformed
        ordenarPorID();
    }//GEN-LAST:event_ordenarPorIdActionPerformed

    private void ordenarPorApellidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ordenarPorApellidoActionPerformed
        Collections.sort(empleados, Comparator.comparing(empleado -> empleado.getApellidos()));
        this.modeloLista.clear();
//        this.modeloLista.add(empleados);
    }//GEN-LAST:event_ordenarPorApellidoActionPerformed

    private void ordenarPorDepartamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ordenarPorDepartamentoActionPerformed
        Collections.sort(empleados, Comparator.comparing(empleado -> empleado.getDepartamento()));
        this.modeloLista.clear();
//        this.modeloLista.addAll(empleados);
    }//GEN-LAST:event_ordenarPorDepartamentoActionPerformed

    private void ordenarPorID() {
        Collections.sort(empleados, Comparator.comparing(empleado -> empleado.getIdEmpleado()));
        this.modeloLista.clear();
//        this.modeloLista.addAll(empleados);
    }

    private void cargarDatosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargarDatosActionPerformed
        if (!this.modeloLista.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Ya se han cargado los datos del fichero", "InformaciÃ³n", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        try (BufferedReader bufferreader = new BufferedReader(new FileReader(new File("recursos/table.csv")))) {
            CsvToBean csvToBean = new CsvToBeanBuilder(bufferreader)
                    .withType(Empleado.class)
                    .withIgnoreLeadingWhiteSpace(true)
                    .build();
            empleados = csvToBean.parse();
            ordenarPorID();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(GUIEmpleados.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(GUIEmpleados.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cargarDatosActionPerformed

    private void busquedaPorIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_busquedaPorIDActionPerformed
        if (modeloLista.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Aun no se han cargado los datos del fichero", "InformaciÃ³n", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        //Datos fichero cargados
        Collections.sort(empleados, Comparator.comparing(empleado -> empleado.getIdEmpleado()));
        String id = JOptionPane.showInputDialog("ID del empleado: ");
        try {
            Integer.parseInt(id);
        } catch (java.lang.NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "Formato ID erroneo", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        Empleado key = new Empleado();
        key.setIdEmpleado(id);
        int pos = Collections.binarySearch(empleados, key);
        if (pos > -1) {
            JOptionPane.showMessageDialog(null, empleados.get(pos).toString(), "Datos empleado", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "Elempleado con ese ID inexistente", "InformaciÃ³n", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_busquedaPorIDActionPerformed

    private void anadirMasDatosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anadirMasDatosActionPerformed
        JFileChooser jfc = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());
        jfc.setDialogTitle("Employees - HR");
        jfc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("Ficheros CSV", "csv");
        jfc.addChoosableFileFilter(filtro);
        jfc.setAcceptAllFileFilterUsed(false); //permite elegir entre las 2 opciones (all|filtro)

        int resp = jfc.showOpenDialog(null);

        if (resp == JFileChooser.APPROVE_OPTION) {
            File file = jfc.getSelectedFile();
            List<Empleado> lista = comprobarEstructura(file);
            System.out.println(lista);
            if (lista != null) {
                BufferedWriter writer = null;
                try {
                    writer = new BufferedWriter(new FileWriter(file, true));
                    StatefulBeanToCsv<Empleado> csvWriter = new StatefulBeanToCsvBuilder<Empleado>(
                            new BufferedWriter(new FileWriter(file, true)))
                            .withSeparator(CSVWriter.DEFAULT_SEPARATOR)
                            .withQuotechar(CSVWriter.NO_QUOTE_CHARACTER)
                            .withEscapechar(CSVWriter.DEFAULT_ESCAPE_CHARACTER)
                            .withLineEnd(CSVWriter.DEFAULT_LINE_END)
                            .withOrderedResults(false)
                            .build();
                    csvWriter.write(lista);
                    modeloLista.clear();
                    JOptionPane.showMessageDialog(null, "Nuevos datos cargados", "InformaciÃ³n", JOptionPane.INFORMATION_MESSAGE);
                } catch (IOException ex) {
                    Logger.getLogger(GUIEmpleados.class.getName()).log(Level.SEVERE, null, ex);
                } catch (CsvDataTypeMismatchException ex) {
                    Logger.getLogger(GUIEmpleados.class.getName()).log(Level.SEVERE, null, ex);
                } catch (CsvRequiredFieldEmptyException ex) {
                    Logger.getLogger(GUIEmpleados.class.getName()).log(Level.SEVERE, null, ex);
                } finally {
                    try {
                        writer.close();
                    } catch (IOException ex) {
                        Logger.getLogger(GUIEmpleados.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, "El fichero no tiene la estrutura adecuada", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }

    }//GEN-LAST:event_anadirMasDatosActionPerformed

    public List<Empleado> comprobarEstructura(File file) {
        List<Empleado> temp = new ArrayList<>();
        try (BufferedReader bufferreader = new BufferedReader(new FileReader(file))) {
            CsvToBean csvToBean = new CsvToBeanBuilder(bufferreader)
                    .withType(Empleado.class)
                    .withIgnoreLeadingWhiteSpace(true)
                    .build();
            for (Empleado emp : (Iterable<Empleado>) csvToBean) {
                temp.add(emp);
            }

        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Error al abrir el fichero", "Error", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(GUIEmpleados.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Error al procesar el fichero", "Error", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(GUIEmpleados.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            return null;
        }

        return temp;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUIEmpleados.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUIEmpleados.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUIEmpleados.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIEmpleados.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUIEmpleados().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton anadirMasDatos;
    private javax.swing.JButton busquedaPorID;
    private javax.swing.JButton cargarDatos;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<Empleado> listaEmpleados;
    private javax.swing.JPanel opcionesOrdenacion;
    private javax.swing.ButtonGroup ordenacion;
    private javax.swing.JRadioButton ordenarPorApellido;
    private javax.swing.JRadioButton ordenarPorDepartamento;
    private javax.swing.JRadioButton ordenarPorId;
    // End of variables declaration//GEN-END:variables
}
